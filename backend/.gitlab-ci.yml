include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'
  - template: Security/SAST.gitlab-ci.yml
  # - local: 'yml_configs/.backend-test.yml'
  - local: 'yml_configs/.ssh-before-script.yml'
 
stages:
   #- test
   - build
   - release
   - deploy

build-backend-code-job:
  stage: build  
  image: docker:20.10.12-dind-rootless
  rules:
    - changes:
      - backend/**/*
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd backend
    - >
      docker build
      --build-arg VERSION=$VERSION
      --build-arg REPORTGENERATOR_PATH=$REPORTGENERATOR_PATH
      --tag $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA
      .

    - docker push $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA
    

upload-backend-latest:
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  stage: release
  rules:
    - changes:
      - backend/**/*
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/momo-backend:latest
    - docker push $CI_REGISTRY_IMAGE/momo-backend:latest

deploy-backend:
  stage: deploy
  image: alpine:3.15.0
  rules:
    - changes:
      - backend/**/*
      when: manual
  extends:
    - .ssh-before-script
  script:
    - ssh ${DEV_USER}@${DEV_HOST} "export "CI_REGISTRY_USER=${CI_REGISTRY_USER}"; export "CI_REGISTRY_PASSWORD=${CI_REGISTRY_PASSWORD}"; export "CI_REGISTRY=${CI_REGISTRY}"; export "CI_REGISTRY_IMAGE=${CI_REGISTRY_IMAGE}";  setsid /bin/bash -s" < ./backend/deploy-backend.sh
    





